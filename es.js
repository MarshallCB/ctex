function t(e,s=(()=>{}),i="/",r="",n={}){var o,h=r?r+i:r;if(e&&e._isCtex)for(o of(s(r,e),e))t(e[o],s,i,h+o,n);else if(Array.isArray(e))for(o=0;o<e.length;o++)t(e[o],s,i,h+o,n);else if(e&&"object"==typeof e)for(o in e)t(e[o],s,i,h+o,n);else!function(t,e,s){e=e.split("/");for(var i,r=0,n=e.length,o=t;r<n;++r)i=o[e[r]],o=o[e[r]]=r===n-1?s:null!=i?i:!~e[r+1].indexOf(".")&&+e[r+1]>-1?[]:{}}(n,r,e);return n}function e(t,e,s,i){e=e.split("/");let r=t;for(s=0;s<e.length;s++)r=r?r[e[s]]:i;return r}class s{constructor(t,e,i){let r=function(t,e,s=!1){Object.defineProperty(this,t,s?e:{value:e})}.bind(this);r("init",t[0].bind(this)),r("r",Symbol()),r("_isCtex",!0),r("s",{}),r(Symbol.iterator,{*a(){yield*t[2],yield*t[3]}}.a),r("_methods",t[1]),r("_properties",t[2]),r("_nodes",t[3]);let n=this.values.bind(this);t[1].forEach(t=>{r(t,{set(s){Promise.resolve(e[t](s))},get:()=>e[t],enumerable:!0},!0)}),t[2].forEach(t=>{let{get:s,set:o}=Object.getOwnPropertyDescriptor(e,t);r("_$"+t,{writable:!0},!0),r(t,s?{get:s}:{set(e){this["_$"+t]=o?o(e):e,this.s[t]&&this.s[t].forEach(t=>Promise.resolve(t(e))),this.s[this.r]&&this.s[this.r].forEach(t=>Promise.resolve(t(n())))},get(){return this["_$"+t]},enumerable:!0},!0),s||(this[t]=i[t]||e[t])}),t[3].forEach(t=>{this[t]=e[t],this[t]instanceof s?this[t].set(i[t]):this[t]=this[t](i[t])}),Object.seal(this),this.init()}subscribe(t,e,s=Symbol()){return"function"==typeof t&&(e=t,t=this.r),this.s[t]||(this.s[t]=new Map),this.s[t].set(s,e),()=>this.s[t].delete(s)}set(s={},i=!0){this._properties.forEach(t=>{void 0!==s[t]&&(this[t]=s[t])}),i&&t(this,(t,i)=>{i.set(e(s,t),!1)})}values(){return t(this)}}function i(t){let{init:e,...i}=t,r=function(t){let e=[[],[],[]];return Object.getOwnPropertyNames(t).forEach(s=>{"init"!==s&&e["function"==typeof t[s]?0:t[s]&&t[s]._isCtex?2:1].push(s)}),e}(i),n=(i={})=>new s([e||(()=>{}),...r],t,i);return n._isCtex=!0,n}function r(s){let r=i(s)();function n(t){return e(r,t)}return n.get=function(t){let s=e(r,t);return s&&s._isCtex?s.values():s},n.post=function(t,s){return e(r,t)(s)},n.save=function(e){let s=(t,s)=>s.subscribe(s=>e(t,s));return s("index",r),t(r,s),n},n.load=function(e){let s=(t,s)=>{Promise.resolve(e(t)).then(t=>r.set(t)).catch(t=>console.log(t))};return s("index"),t(r,s),n},n}export{i as Context,r as Network};
