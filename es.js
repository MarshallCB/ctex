const t={CONTEXT:Symbol("ctex-context"),MODEL:Symbol("ctex-model")};class s{constructor(t,s){Object.assign(this,{values:t,subs:s});const e=(t,s)=>(this.subs[t]=this.subs[t]||new Set,this.subs[t].add(s),()=>this.subs[t].delete(s));this.$=new Proxy(t=>e("",t),{get:(t,s)=>t=>e(s,t)})}setter(s){let e=[];for(const n in s){const o=s[n],r=this.values[n];r&&r[t.CONTEXT]?e.push([n,r(o)]):r!==o&&(this.values[n]=o,e.push([n,o]))}e.length>0&&(e.push(["",this.all()]),e.forEach(([t,s])=>{const e=this.subs[t];if(e)for(const t of e)t(s)}))}getter(s){const e=this.values[s];return e&&e[t.CONTEXT]?e():e}all(){let t={};return Object.keys(this.values).forEach(s=>{"function"!=typeof this.values[s]&&(t[s]=this.getter(s))}),t}}function e(e){let n=(n={})=>{let o=new s(Object.assign({},e,n),{});return new Proxy((function(t){return o.setter(t),o.all()}),{get:(s,e)=>e===t.CONTEXT||("$"===e?o.$:o.getter(e)),set:(t,s,e)=>(o.setter({[s]:e}),!0)})};return n[t.MODEL]=!0,n}let n=t=>e(t)();export{t as CTEX,n as Context,e as Model};
