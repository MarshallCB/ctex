function t(e,i=(()=>{}),s="/",r="",n={}){var o,l=r?r+s:r;if(e&&e._isCtex)for(o of(i(r,e),e))t(e[o],i,s,l+o,n);else if(Array.isArray(e))for(o=0;o<e.length;o++)t(e[o],i,s,l+o,n);else if(e&&"object"==typeof e)for(o in e)t(e[o],i,s,l+o,n);else!function(t,e,i){e=e.split("/");for(var s,r=0,n=e.length,o=t;r<n;++r)s=o[e[r]],o=o[e[r]]=r===n-1?i:null!=s?s:!~e[r+1].indexOf(".")&&+e[r+1]>-1?[]:{}}(n,r,e);return n}function e(t,e,i,s){e=e.split("/");let r=t;for(i=0;i<e.length;i++)r=r?r[e[i]]:s;return r}class i{constructor(t,e,s){let r=function(t,e,i=!1){Object.defineProperty(this,t,i?e:{value:e})}.bind(this);r("init",t[0].bind(this)),r("r",Symbol()),r("_isCtex",!0),r("s",{}),r(Symbol.iterator,{*a(){yield*t[2],yield*t[3]}}.a);let n=this.values.bind(this);t[1].forEach(t=>{r(t,{set(i){Promise.resolve(e[t](i))},get:()=>e[t],enumerable:!0},!0)}),t[2].forEach(t=>{let{get:i,set:o}=Object.getOwnPropertyDescriptor(e,t);r("_$"+t,{writable:!0},!0),r(t,i?{get:i}:{set(e){this["_$"+t]=o?o(e):e,this.s[t]&&this.s[t].forEach(t=>Promise.resolve(t(e))),this.s[this.r]&&this.s[this.r].forEach(t=>Promise.resolve(t(n())))},get(){return this["_$"+t]},enumerable:!0},!0),i||(this[t]=s[t]||e[t])}),t[3].forEach(t=>{this[t]=e[t],this[t]instanceof i?this[t].set(s[t]||{}):this[t]=this[t](s[t]||{})}),Object.seal(this),this.init()}subscribe(t,e){let i=Symbol();return"function"==typeof t&&(e=t,t=this.r),this.s[t]||(this.s[t]=new Map),this.s[t].set(i,e),()=>this.s[t].delete(i)}set(i={},s=!0){for(let[t,e]of Object.entries(i))void 0===this[t]||null!=this[t]&&this[t]._isCtex||(this[t]=e);s&&t(this,(t,s)=>{s.set(e(i,t),!1)})}values(){return t(this)}}function s(t){let{init:e,...s}=t,r=function(t){let e=[[],[],[]];return Object.getOwnPropertyNames(t).forEach(i=>{"init"!==i&&e["function"==typeof t[i]?0:t[i]&&t[i]._isCtex?2:1].push(i)}),e}(s),n=(s={})=>new i([e||(()=>{}),...r],t,s);return n._isCtex=!0,n}function r(i){let r=s(i)();function n(t){return e(r,t)}return n.get=function(t){let i=e(r,t);return i&&i._isCtex?i.values():i},n.post=function(t,i){return e(r,t)(i)},n.save=function(e){let i=(t,i)=>i.subscribe(i=>e(t,i));return i("index",r),t(r,i),n},n.load=function(e){let i=(t,i)=>{Promise.resolve(e(t)).then(t=>r.set(t)).catch(t=>console.log(t))};return i("index"),t(r,i),n},n}export{s as Context,r as Network};
